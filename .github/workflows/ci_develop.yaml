name: CI for Develop Branch
on: 
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Set up Kaggle API credentials
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"${{ secrets.KAGGLE_USERNAME }}\",\"key\":\"${{ secrets.KAGGLE_KEY }}\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Install Poetry
        run: pip install poetry

      - name: Install asltk project dependecies
        run: poetry install

      - name: Run code formatting check
        run: poetry run task lint-check

      - name: Run project tests
        run: poetry run task test --cov-report=xml --ignore-glob='./asltk/scripts/*.py'

      - name: Show-up test coverage (codecov)
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.0


      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Set up Kaggle API credentials
        run: |
          # Create directory if it doesn't exist
          New-Item -Path "$env:USERPROFILE\.kaggle" -ItemType Directory -Force
          
          # Create credentials JSON file
          $credentials = @{
              username = "${{ secrets.KAGGLE_USERNAME }}"
              key = "${{ secrets.KAGGLE_KEY }}"
          }
          
          # Convert to JSON and save
          $credentials | ConvertTo-Json -Compress | Set-Content -Path "$env:USERPROFILE\.kaggle\kaggle.json" -Encoding ASCII
        shell: pwsh

      - name: Move source to short path (windows limitation)
        run: |
          mkdir C:\src
          xcopy /E /I . C:\src
        shell: cmd

      - name: Install Poetry
        working-directory: C:\src
        run: pip install poetry

      - name: Install ITK (dependency for antspyx)
        working-directory: C:\src
        run: pip install itk

      - name: Configure additional dependencies
        working-directory: C:\src
        run: |
          pip install ninja cmake
          pip install wheel setuptools
        shell: cmd

      - name: Install asltk project dependecies
        working-directory: C:\src
        run: poetry install

      - name: Verify antspyx installation
        working-directory: C:\src
        run: |
          python -c "import ants; print('ANTs version:', ants.__version__)" || (echo "::error::antspyx not installed correctly, failing build" && exit 1)
        shell: cmd

      - name: Run code formatting check
        working-directory: C:\src
        run: poetry run task lint-check

      - name: Run project tests
        working-directory: C:\src
        run: poetry run task test --cov-report=xml --ignore-glob='./asltk/scripts/*.py'

      - name: Show-up test coverage (codecov)
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }} 

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Set up Kaggle API credentials
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"${{ secrets.KAGGLE_USERNAME }}\",\"key\":\"${{ secrets.KAGGLE_KEY }}\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Install Poetry
        run: pip install poetry

      - name: Install asltk project dependecies
        run: poetry install

      - name: Run code formatting check
        run: poetry run task lint-check

      - name: Run project tests
        run: poetry run task test --cov-report=xml --ignore-glob='./asltk/scripts/*.py'

      - name: Show-up test coverage (codecov)
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
